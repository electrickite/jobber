{"version":3,"sources":["jobber-client/tests/acceptance/job-index-test.js","jobber-client/tests/acceptance/job-index-test.jshint.js","jobber-client/tests/acceptance/job-show-test.js","jobber-client/tests/acceptance/job-show-test.jshint.js","jobber-client/tests/acceptance/navigation-test.js","jobber-client/tests/acceptance/navigation-test.jshint.js","jobber-client/tests/acceptance/salary-vis-test.js","jobber-client/tests/acceptance/salary-vis-test.jshint.js","jobber-client/tests/adapters/application.jshint.js","jobber-client/tests/app.jshint.js","jobber-client/tests/components/jobs-table.jshint.js","jobber-client/tests/helpers/destroy-app.js","jobber-client/tests/helpers/destroy-app.jshint.js","jobber-client/tests/helpers/module-for-acceptance.js","jobber-client/tests/helpers/module-for-acceptance.jshint.js","jobber-client/tests/helpers/resolver.js","jobber-client/tests/helpers/resolver.jshint.js","jobber-client/tests/helpers/start-app.js","jobber-client/tests/helpers/start-app.jshint.js","jobber-client/tests/helpers/truncate.jshint.js","jobber-client/tests/models/job.jshint.js","jobber-client/tests/router.jshint.js","jobber-client/tests/routes/index.jshint.js","jobber-client/tests/routes/job.jshint.js","jobber-client/tests/test-helper.js","jobber-client/tests/test-helper.jshint.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["define('jobber-client/tests/acceptance/job-index-test', ['exports', 'qunit', 'jobber-client/tests/helpers/module-for-acceptance'], function (exports, _qunit, _jobberClientTestsHelpersModuleForAcceptance) {\n\n  (0, _jobberClientTestsHelpersModuleForAcceptance['default'])('Acceptance | job index');\n\n  (0, _qunit.test)('showing the index page', function (assert) {\n    visit('/');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs').length, 1, \"job table is present\");\n      assert.equal(currentPath(), 'index', \"showing the index page\");\n      assert.equal(currentURL(), '/', \"URL is correct\");\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 138, \"all jobs are shown\");\n    });\n  });\n\n  (0, _qunit.test)('sorting job list', function (assert) {\n    visit('/');\n    click('#all-jobs thead tr th:first');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:first').text(), 'Academic Advisor', \"title sorts ascending correctly\");\n    });\n\n    click('#all-jobs thead tr th:first');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:first').text(), 'Vehicle Operator 2', \"title sorts descending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(2)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(2)').text(), 'Academic Advisor', \"working title sorts ascending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(2)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(2)').text(), 'Water Quality Lab Research Aid', \"working title sorts descending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(3)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(3)').text(), 'Ackerman Road', \"department sorts ascending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(3)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(3)').text(), 'WCA-Ticket Services', \"department sorts descending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(4)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(4)').text(), '12/15/2015', \"end date sorts ascending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(4)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(4)').text(), '05/01/2016', \"end date sorts descending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(5)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(5)').text(), '', \"location sorts ascending correctly\");\n    });\n\n    click('#all-jobs thead tr th:nth-child(5)');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr:first td:nth-child(5)').text(), 'Wooster', \"location sorts descending correctly\");\n    });\n  });\n\n  (0, _qunit.test)('filtering job list', function (assert) {\n    visit('/');\n    click('#filters-heading a');\n    fillIn('#text-filter', 'design');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 4, \"only text filtered jobs are shown\");\n    });\n\n    fillIn('#text-filter', '');\n    fillIn('#title-filter', 'Asst Director of Development');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 3, \"only title filtered jobs are shown\");\n    });\n\n    fillIn('#title-filter', '');\n    fillIn('#department-filter', 'OARnet');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 2, \"only department filtered jobs are shown\");\n    });\n\n    fillIn('#department-filter', '');\n    fillIn('#location-filter', 'Wooster');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 4, \"only location filtered jobs are shown\");\n    });\n\n    fillIn('#department-filter', 'FAES IT');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 1, \"multiple filters are additive\");\n    });\n  });\n\n  (0, _qunit.test)('index after deep linking', function (assert) {\n    visit('/job/67237');\n    click('nav li a[href=\"/\"]');\n\n    andThen(function () {\n      assert.equal(find('#all-jobs tbody tr.job-fields').length, 138, \"all jobs loaded after deep linking\");\n    });\n  });\n});","define('jobber-client/tests/acceptance/job-index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/job-index-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/job-index-test.js should pass jshint.');\n  });\n});","define('jobber-client/tests/acceptance/job-show-test', ['exports', 'qunit', 'jobber-client/tests/helpers/module-for-acceptance'], function (exports, _qunit, _jobberClientTestsHelpersModuleForAcceptance) {\n\n  (0, _jobberClientTestsHelpersModuleForAcceptance['default'])('Acceptance | job show');\n\n  (0, _qunit.test)('showing the job posting page', function (assert) {\n    visit('/job/67237');\n\n    andThen(function () {\n      assert.equal(currentPath(), 'job', \"showing the job posting page\");\n      assert.equal(currentURL(), '/job/67237', \"URL is correct\");\n      assert.equal(find('h1').text(), 'Secretary - OMFS Office Associate', \"job page is rendered\");\n    });\n  });\n\n  (0, _qunit.test)('linking to job page from job index', function (assert) {\n    visit('/');\n    fillIn('#text-filter', 'OMFS');\n    click('#all-jobs tbody tr:first td:first');\n\n    andThen(function () {\n      assert.equal(currentPath(), 'job', \"showing the job posting page\");\n      assert.equal(find('h1').text(), 'Secretary - OMFS Office Associate', \"job page is rendered after link\");\n    });\n  });\n});","define('jobber-client/tests/acceptance/job-show-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/job-show-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/job-show-test.js should pass jshint.');\n  });\n});","define('jobber-client/tests/acceptance/navigation-test', ['exports', 'qunit', 'jobber-client/tests/helpers/module-for-acceptance'], function (exports, _qunit, _jobberClientTestsHelpersModuleForAcceptance) {\n\n  (0, _jobberClientTestsHelpersModuleForAcceptance['default'])('Acceptance | navigation');\n\n  (0, _qunit.test)('navbar is present', function (assert) {\n    visit('/');\n\n    andThen(function () {\n      assert.equal(find('.navbar .navbar-header').length, 1, \"page nav is present\");\n    });\n  });\n\n  (0, _qunit.test)('linking to the salary page from the index page', function (assert) {\n    visit('/');\n    click('nav li a[href=\"/salary\"]');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/salary', \"user navigates to the salary page\");\n    });\n  });\n\n  (0, _qunit.test)('linking to the index page from the salary page', function (assert) {\n    visit('/salary');\n    click('nav li a[href=\"/\"]');\n\n    andThen(function () {\n      assert.equal(currentURL(), '/', \"user navigates to the index page\");\n    });\n  });\n});","define('jobber-client/tests/acceptance/navigation-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/navigation-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'acceptance/navigation-test.js should pass jshint.');\n  });\n});","define('jobber-client/tests/acceptance/salary-vis-test', ['exports', 'qunit', 'jobber-client/tests/helpers/module-for-acceptance'], function (exports, _qunit, _jobberClientTestsHelpersModuleForAcceptance) {\n\n  (0, _jobberClientTestsHelpersModuleForAcceptance['default'])('Acceptance | job index');\n\n  (0, _qunit.test)('showing the salary visualization page', function (assert) {\n    var promise = $.Deferred();\n    visit('/salary');\n\n    andThen(function () {\n      assert.equal(currentPath(), 'salary', \"showing the salary page\");\n      assert.equal(currentURL(), '/salary', \"URL is correct\");\n\n      Ember.run.later(function () {\n        assert.equal(find('#vis svg').length, 1, \"visualization has rendered\");\n        promise.resolve();\n      }, 1000);\n    });\n  });\n\n  (0, _qunit.test)('running the salary visualization', function (assert) {\n    var promise = $.Deferred();\n    visit('/salary');\n\n    andThen(function () {\n      Ember.run.later(function () {\n        assert.equal(find('#vis svg circle').length, 138, \"visualization has correct number of nodes\");\n        promise.resolve();\n      }, 1000);\n    });\n  });\n});","define('jobber-client/tests/acceptance/salary-vis-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - acceptance');\n  QUnit.test('acceptance/salary-vis-test.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'acceptance/salary-vis-test.js should pass jshint.\\nacceptance/salary-vis-test.js: line 14, col 5, \\'Ember\\' is not defined.\\nacceptance/salary-vis-test.js: line 26, col 5, \\'Ember\\' is not defined.\\n\\n2 errors');\n  });\n});","define('jobber-client/tests/adapters/application.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - adapters');\n  QUnit.test('adapters/application.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass jshint.');\n  });\n});","define('jobber-client/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass jshint.');\n  });\n});","define('jobber-client/tests/components/jobs-table.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - components');\n  QUnit.test('components/jobs-table.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/jobs-table.js should pass jshint.');\n  });\n});","define('jobber-client/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('jobber-client/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/destroy-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('jobber-client/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'jobber-client/tests/helpers/start-app', 'jobber-client/tests/helpers/destroy-app'], function (exports, _qunit, _jobberClientTestsHelpersStartApp, _jobberClientTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _jobberClientTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        (0, _jobberClientTestsHelpersDestroyApp['default'])(this.application);\n\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n      }\n    });\n  };\n});","define('jobber-client/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/module-for-acceptance.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('jobber-client/tests/helpers/resolver', ['exports', 'ember/resolver', 'jobber-client/config/environment'], function (exports, _emberResolver, _jobberClientConfigEnvironment) {\n\n  var resolver = _emberResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _jobberClientConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _jobberClientConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('jobber-client/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/resolver.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('jobber-client/tests/helpers/start-app', ['exports', 'ember', 'jobber-client/app', 'jobber-client/config/environment'], function (exports, _ember, _jobberClientApp, _jobberClientConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _jobberClientConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _jobberClientApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('jobber-client/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/start-app.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('jobber-client/tests/helpers/truncate.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers');\n  QUnit.test('helpers/truncate.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/truncate.js should pass jshint.');\n  });\n});","define('jobber-client/tests/models/job.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - models');\n  QUnit.test('models/job.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/job.js should pass jshint.');\n  });\n});","define('jobber-client/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('router.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass jshint.');\n  });\n});","define('jobber-client/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/index.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/index.js should pass jshint.');\n  });\n});","define('jobber-client/tests/routes/job.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes');\n  QUnit.test('routes/job.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/job.js should pass jshint.');\n  });\n});","define('jobber-client/tests/test-helper', ['exports', 'jobber-client/tests/helpers/resolver', 'ember-qunit'], function (exports, _jobberClientTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_jobberClientTestsHelpersResolver['default']);\n});","define('jobber-client/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - .');\n  QUnit.test('test-helper.js should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('jobber-client/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"],"names":[],"mappingsvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;","file":"tests.js"}